/*
 * Automatically generated by preplate
 */
goog.provide('pdemo.data.model.FloatSample');

goog.require('goog.json');

goog.require('prestans.types.Model.EventType');
goog.require('prestans.types.Model.AttributeChangedEvent');

goog.require('prestans.types.Model');

goog.require('prestans.types.Float');

/**
 * @constructor
 * @extends {prestans.types.Model}
*/
pdemo.data.model.FloatSample = function(opt_json) {

    //Setup base model
    prestans.types.Model.call(this);

    if(goog.isDefAndNotNull(opt_json)) {
        this.floatRequired_ = new prestans.types.Float({value: opt_json["float_required"], required: true, default: null, maximum: null, minimum: null, choices: null});
        this.floatMinimum_ = new prestans.types.Float({value: opt_json["float_minimum"], required: true, default: null, maximum: null, minimum: 1.0, choices: null});
        this.floatNotRequired_ = new prestans.types.Float({value: opt_json["float_not_required"], required: false, default: null, maximum: null, minimum: null, choices: null});
        this.floatMaximum_ = new prestans.types.Float({value: opt_json["float_maximum"], required: true, default: null, maximum: 5.0, minimum: null, choices: null});
        this.floatChoices_ = new prestans.types.Float({value: opt_json["float_choices"], required: true, default: null, maximum: null, minimum: null, choices: [1.1, 2.2, 3.3]});
        this.floatDefault_ = new prestans.types.Float({value: opt_json["float_default"], required: true, default: 6.0, maximum: null, minimum: null, choices: null});
    }
    else {
        this.floatRequired_ = new prestans.types.Float({required: true, default: null, maximum: null, minimum: null, choices: null});
        this.floatMinimum_ = new prestans.types.Float({required: true, default: null, maximum: null, minimum: 1.0, choices: null});
        this.floatNotRequired_ = new prestans.types.Float({required: false, default: null, maximum: null, minimum: null, choices: null});
        this.floatMaximum_ = new prestans.types.Float({required: true, default: null, maximum: 5.0, minimum: null, choices: null});
        this.floatChoices_ = new prestans.types.Float({required: true, default: null, maximum: null, minimum: null, choices: [1.1, 2.2, 3.3]});
        this.floatDefault_ = new prestans.types.Float({required: true, default: 6.0, maximum: null, minimum: null, choices: null});
    }
};
goog.inherits(pdemo.data.model.FloatSample, prestans.types.Model);



pdemo.data.model.FloatSample.prototype.floatRequired_ = null;
pdemo.data.model.FloatSample.prototype.floatMinimum_ = null;
pdemo.data.model.FloatSample.prototype.floatNotRequired_ = null;
pdemo.data.model.FloatSample.prototype.floatMaximum_ = null;
pdemo.data.model.FloatSample.prototype.floatChoices_ = null;
pdemo.data.model.FloatSample.FloatChoicesChoices = [1.1, 2.2, 3.3];
pdemo.data.model.FloatSample.prototype.floatDefault_ = null;


pdemo.data.model.FloatSample.prototype.getFloatRequired = function() {
    return this.floatRequired_.getValue();
};

pdemo.data.model.FloatSample.prototype.setFloatRequired = function(value) {
    var previousValue_ = this.floatRequired_.getValue();
    var success_ = this.floatRequired_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "floatRequired", previousValue_, this.floatRequired_.getValue()));
    return success_;
};



pdemo.data.model.FloatSample.prototype.getFloatMinimum = function() {
    return this.floatMinimum_.getValue();
};

pdemo.data.model.FloatSample.prototype.setFloatMinimum = function(value) {
    var previousValue_ = this.floatMinimum_.getValue();
    var success_ = this.floatMinimum_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "floatMinimum", previousValue_, this.floatMinimum_.getValue()));
    return success_;
};



pdemo.data.model.FloatSample.prototype.getFloatNotRequired = function() {
    return this.floatNotRequired_.getValue();
};

pdemo.data.model.FloatSample.prototype.setFloatNotRequired = function(value) {
    var previousValue_ = this.floatNotRequired_.getValue();
    var success_ = this.floatNotRequired_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "floatNotRequired", previousValue_, this.floatNotRequired_.getValue()));
    return success_;
};



pdemo.data.model.FloatSample.prototype.getFloatMaximum = function() {
    return this.floatMaximum_.getValue();
};

pdemo.data.model.FloatSample.prototype.setFloatMaximum = function(value) {
    var previousValue_ = this.floatMaximum_.getValue();
    var success_ = this.floatMaximum_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "floatMaximum", previousValue_, this.floatMaximum_.getValue()));
    return success_;
};



pdemo.data.model.FloatSample.prototype.getFloatChoices = function() {
    return this.floatChoices_.getValue();
};

pdemo.data.model.FloatSample.prototype.setFloatChoices = function(value) {
    var previousValue_ = this.floatChoices_.getValue();
    var success_ = this.floatChoices_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "floatChoices", previousValue_, this.floatChoices_.getValue()));
    return success_;
};



pdemo.data.model.FloatSample.prototype.getFloatDefault = function() {
    return this.floatDefault_.getValue();
};

pdemo.data.model.FloatSample.prototype.setFloatDefault = function(value) {
    var previousValue_ = this.floatDefault_.getValue();
    var success_ = this.floatDefault_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "floatDefault", previousValue_, this.floatDefault_.getValue()));
    return success_;
};



pdemo.data.model.FloatSample.prototype.setValueForKey = function(key, value) {

    var returnVal_ = null;

    switch(key)
    {
        case "floatRequired":
            returnVal_ = this.setFloatRequired(value);
            break;
        case "floatMinimum":
            returnVal_ = this.setFloatMinimum(value);
            break;
        case "floatNotRequired":
            returnVal_ = this.setFloatNotRequired(value);
            break;
        case "floatMaximum":
            returnVal_ = this.setFloatMaximum(value);
            break;
        case "floatChoices":
            returnVal_ = this.setFloatChoices(value);
            break;
        case "floatDefault":
            returnVal_ = this.setFloatDefault(value);
            break;
        default:
            throw "Key: "+key+" not found in model";
    }

    return returnVal_;

};



pdemo.data.model.FloatSample.prototype.getJSONObject = function(opt_filter) {

    var jsonifiedObject_ = {};
    
    if(goog.isDef(opt_filter) && opt_filter.getFloatRequired())
        jsonifiedObject_["float_required"] = this.getFloatRequired()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["float_required"] = this.getFloatRequired()
    if(goog.isDef(opt_filter) && opt_filter.getFloatMinimum())
        jsonifiedObject_["float_minimum"] = this.getFloatMinimum()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["float_minimum"] = this.getFloatMinimum()
    if(goog.isDef(opt_filter) && opt_filter.getFloatNotRequired())
        jsonifiedObject_["float_not_required"] = this.getFloatNotRequired()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["float_not_required"] = this.getFloatNotRequired()
    if(goog.isDef(opt_filter) && opt_filter.getFloatMaximum())
        jsonifiedObject_["float_maximum"] = this.getFloatMaximum()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["float_maximum"] = this.getFloatMaximum()
    if(goog.isDef(opt_filter) && opt_filter.getFloatChoices())
        jsonifiedObject_["float_choices"] = this.getFloatChoices()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["float_choices"] = this.getFloatChoices()
    if(goog.isDef(opt_filter) && opt_filter.getFloatDefault())
        jsonifiedObject_["float_default"] = this.getFloatDefault()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["float_default"] = this.getFloatDefault()

    return jsonifiedObject_;
};

pdemo.data.model.FloatSample.prototype.getJSONString = function(opt_filter) {
    return goog.json.serialize(this.getJSONObject(opt_filter));
};