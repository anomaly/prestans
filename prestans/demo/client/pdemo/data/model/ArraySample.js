/*
 * Automatically generated by preplate
 */
goog.provide('pdemo.data.model.ArraySample');

goog.require('goog.json');

goog.require('prestans.types.Model.EventType');
goog.require('prestans.types.Model.AttributeChangedEvent');

goog.require('prestans.types.Model');

goog.require('prestans.types.String');
goog.require('prestans.types.Integer');
goog.require('pdemo.data.model.IntegerSample');

/**
 * @constructor
 * @extends {prestans.types.Model}
*/
pdemo.data.model.ArraySample = function(opt_json) {

    //Setup base model
    prestans.types.Model.call(this);

    if(goog.isDefAndNotNull(opt_json)) {
        this.stringTitle_ = new prestans.types.String({value: opt_json["string_title"], required: true, default: null, maxLength: null, minLength: null, format: null, choices: null});
        this.integerArray_ = new prestans.types.Array({elementTemplate: prestans.types.Integer, opt_json: opt_json["integer_array"], null, null);
        this.stringArray_ = new prestans.types.Array({elementTemplate: prestans.types.String, opt_json: opt_json["string_array"], null, null);
        this.modelArray_ = new prestans.types.Array({elementTemplate: pdemo.data.model.IntegerSample, opt_json: opt_json["model_array"], maxLength: null, minLength: null});
    }
    else {
        this.stringTitle_ = new prestans.types.String({required: true, default: null, max_length: null, min_length: null, format: null, choices: null});
        this.integerArray_ = new prestans.types.Array({elementTemplate: prestans.types.Integer, maxLength: null, minLength: null});
        this.stringArray_ = new prestans.types.Array({elementTemplate: prestans.types.String, maxLength: null, minLength: null});
        this.modelArray_ = new prestans.types.Array({elementTemplate: pdemo.data.model.IntegerSample, maxLength: null, minLength: null});
    }
};
goog.inherits(pdemo.data.model.ArraySample, prestans.types.Model);



pdemo.data.model.ArraySample.prototype.stringTitle_ = null;
pdemo.data.model.ArraySample.prototype.integerArray_ = null;
pdemo.data.model.ArraySample.prototype.stringArray_ = null;
pdemo.data.model.ArraySample.prototype.modelArray_ = null;


pdemo.data.model.ArraySample.prototype.getStringTitle = function() {
    return this.stringTitle_.getValue();
};

pdemo.data.model.ArraySample.prototype.setStringTitle = function(value) {
    var previousValue_ = this.stringTitle_.getValue();
    var success_ = this.stringTitle_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "stringTitle", previousValue_, this.stringTitle_.getValue()));
    return success_;
};



pdemo.data.model.ArraySample.prototype.getIntegerArray = function() {
    return this.integerArray_;
};

pdemo.data.model.ArraySample.prototype.setIntegerArray = function(value) {
    var previousArray_ = this.integerArray_;
    if(value instanceof prestans.types.Array && value.getElementTemplate() == prestans.types.Integer) {
        this.integerArray_ = value;
        this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "integerArray", previousArray_, this.integerArray_));
        return true;
    }
    else
        return false;
};



pdemo.data.model.ArraySample.prototype.getStringArray = function() {
    return this.stringArray_;
};

pdemo.data.model.ArraySample.prototype.setStringArray = function(value) {
    var previousArray_ = this.stringArray_;
    if(value instanceof prestans.types.Array && value.getElementTemplate() == prestans.types.String) {
        this.stringArray_ = value;
        this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "stringArray", previousArray_, this.stringArray_));
        return true;
    }
    else
        return false;
};



pdemo.data.model.ArraySample.prototype.getModelArray = function() {
    return this.modelArray_;
};

pdemo.data.model.ArraySample.prototype.setModelArray = function(value) {
    var previousArray_ = this.modelArray_;
    if(value instanceof prestans.types.Array && value.getElementTemplate() == pdemo.data.model.IntegerSample) {
        this.modelArray_ = value;
        this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "modelArray", previousArray_, this.modelArray_));
        return true;
    }
    else
        return false;
};



pdemo.data.model.ArraySample.prototype.setValueForKey = function(key, value) {

    var returnVal_ = null;

    switch(key)
    {
        case "stringTitle":
            returnVal_ = this.setStringTitle(value);
            break;
        case "integerArray":
            returnVal_ = this.setIntegerArray(value);
            break;
        case "stringArray":
            returnVal_ = this.setStringArray(value);
            break;
        case "modelArray":
            returnVal_ = this.setModelArray(value);
            break;
        default:
            throw "Key: "+key+" not found in model";
    }

    return returnVal_;

};



pdemo.data.model.ArraySample.prototype.getJSONObject = function(opt_filter) {

    var jsonifiedObject_ = {};
    
    if(goog.isDef(opt_filter) && opt_filter.getStringTitle())
        jsonifiedObject_["string_title"] = this.getStringTitle()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["string_title"] = this.getStringTitle()
    if(goog.isDef(opt_filter) && opt_filter.getIntegerArray())
        jsonifiedObject_["integer_array"] = this.getIntegerArray().getJSONObject(opt_filter.getIntegerArray());
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["integer_array"] = this.getIntegerArray().getJSONObject();
    if(goog.isDef(opt_filter) && opt_filter.getStringArray())
        jsonifiedObject_["string_array"] = this.getStringArray().getJSONObject(opt_filter.getStringArray());
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["string_array"] = this.getStringArray().getJSONObject();
    if(goog.isDef(opt_filter) && opt_filter.getModelArray().anyFieldsEnabled())
        jsonifiedObject_["model_array"] = this.getModelArray().getJSONObject(opt_filter.getModelArray());
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["model_array"] = this.getModelArray().getJSONObject();

    return jsonifiedObject_;
};

pdemo.data.model.ArraySample.prototype.getJSONString = function(opt_filter) {
    return goog.json.serialize(this.getJSONObject(opt_filter));
};