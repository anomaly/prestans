/*
 * Automatically generated by preplate
 */
goog.provide('pdemo.data.model.Match');

goog.require('goog.json');

goog.require('prestans.types.Model.EventType');
goog.require('prestans.types.Model.AttributeChangedEvent');

goog.require('prestans.types.Model');

goog.require('prestans.types.Integer');
goog.require('pdemo.data.model.PlayerMatchStats');
goog.require('prestans.types.String');

/**
 * @constructor
 * @extends {prestans.types.Model}
*/
pdemo.data.model.Match = function(opt_json) {

    //Setup base model
    prestans.types.Model.call(this);

    if(goog.isDefAndNotNull(opt_json)) {
        this.seasonId_ = new prestans.types.Integer({value: opt_json["season_id"], required: true, default: null, maximum: null, minimum: null, choices: null});
        this.playerStats_ = new prestans.types.Array({elementTemplate: pdemo.data.model.PlayerMatchStats, opt_json: opt_json["player_stats"], maxLength: null, minLength: null});
        this.venue_ = new prestans.types.String({value: opt_json["venue"], required: true, default: null, maxLength: null, minLength: null, format: null, choices: null});
        this.matchId_ = new prestans.types.Integer({value: opt_json["match_id"], required: true, default: null, maximum: null, minimum: null, choices: null});
    }
    else {
        this.seasonId_ = new prestans.types.Integer({required: true, default: null, maximum: null, minimum: null, choices: null});
        this.playerStats_ = new prestans.types.Array({elementTemplate: pdemo.data.model.PlayerMatchStats, maxLength: null, minLength: null});
        this.venue_ = new prestans.types.String({required: true, default: null, max_length: null, min_length: null, format: null, choices: null});
        this.matchId_ = new prestans.types.Integer({required: true, default: null, maximum: null, minimum: null, choices: null});
    }
};
goog.inherits(pdemo.data.model.Match, prestans.types.Model);



pdemo.data.model.Match.prototype.seasonId_ = null;
pdemo.data.model.Match.prototype.playerStats_ = null;
pdemo.data.model.Match.prototype.venue_ = null;
pdemo.data.model.Match.prototype.matchId_ = null;


pdemo.data.model.Match.prototype.getSeasonId = function() {
    return this.seasonId_.getValue();
};

pdemo.data.model.Match.prototype.setSeasonId = function(value) {
    var previousValue_ = this.seasonId_.getValue();
    var success_ = this.seasonId_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "seasonId", previousValue_, this.seasonId_.getValue()));
    return success_;
};



pdemo.data.model.Match.prototype.getPlayerStats = function() {
    return this.playerStats_;
};

pdemo.data.model.Match.prototype.setPlayerStats = function(value) {
    var previousArray_ = this.playerStats_;
    if(value instanceof prestans.types.Array && value.getElementTemplate() == pdemo.data.model.PlayerMatchStats) {
        this.playerStats_ = value;
        this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "playerStats", previousArray_, this.playerStats_));
        return true;
    }
    else
        return false;
};



pdemo.data.model.Match.prototype.getVenue = function() {
    return this.venue_.getValue();
};

pdemo.data.model.Match.prototype.setVenue = function(value) {
    var previousValue_ = this.venue_.getValue();
    var success_ = this.venue_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "venue", previousValue_, this.venue_.getValue()));
    return success_;
};



pdemo.data.model.Match.prototype.getMatchId = function() {
    return this.matchId_.getValue();
};

pdemo.data.model.Match.prototype.setMatchId = function(value) {
    var previousValue_ = this.matchId_.getValue();
    var success_ = this.matchId_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "matchId", previousValue_, this.matchId_.getValue()));
    return success_;
};



pdemo.data.model.Match.prototype.setValueForKey = function(key, value) {

    var returnVal_ = null;

    switch(key)
    {
        case "seasonId":
            returnVal_ = this.setSeasonId(value);
            break;
        case "playerStats":
            returnVal_ = this.setPlayerStats(value);
            break;
        case "venue":
            returnVal_ = this.setVenue(value);
            break;
        case "matchId":
            returnVal_ = this.setMatchId(value);
            break;
        default:
            throw "Key: "+key+" not found in model";
    }

    return returnVal_;

};



pdemo.data.model.Match.prototype.getJSONObject = function(opt_filter) {

    var jsonifiedObject_ = {};
    
    if(goog.isDef(opt_filter) && opt_filter.getSeasonId())
        jsonifiedObject_["season_id"] = this.getSeasonId()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["season_id"] = this.getSeasonId()
    if(goog.isDef(opt_filter) && opt_filter.getPlayerStats().anyFieldsEnabled())
        jsonifiedObject_["player_stats"] = this.getPlayerStats().getJSONObject(opt_filter.getPlayerStats());
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["player_stats"] = this.getPlayerStats().getJSONObject();
    if(goog.isDef(opt_filter) && opt_filter.getVenue())
        jsonifiedObject_["venue"] = this.getVenue()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["venue"] = this.getVenue()
    if(goog.isDef(opt_filter) && opt_filter.getMatchId())
        jsonifiedObject_["match_id"] = this.getMatchId()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["match_id"] = this.getMatchId()

    return jsonifiedObject_;
};

pdemo.data.model.Match.prototype.getJSONString = function(opt_filter) {
    return goog.json.serialize(this.getJSONObject(opt_filter));
};