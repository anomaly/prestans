/*
 * Automatically generated by preplate
 */
goog.provide('pdemo.data.model.SelectedTeam');

goog.require('goog.json');

goog.require('prestans.types.Model.EventType');
goog.require('prestans.types.Model.AttributeChangedEvent');

goog.require('prestans.types.Model');

goog.require('pdemo.data.model.SelectedPlayer');
goog.require('prestans.types.Integer');

/**
 * @constructor
 * @extends {prestans.types.Model}
*/
pdemo.data.model.SelectedTeam = function(opt_json) {

    //Setup base model
    prestans.types.Model.call(this);

    if(goog.isDefAndNotNull(opt_json)) {
        this.players_ = new prestans.types.Array({elementTemplate: pdemo.data.model.SelectedPlayer, opt_json: opt_json["players"], maxLength: null, minLength: null});
        this.selectedTeamId_ = new prestans.types.Integer({value: opt_json["selected_team_id"], required: true, default: null, maximum: null, minimum: null, choices: null});
    }
    else {
        this.players_ = new prestans.types.Array({elementTemplate: pdemo.data.model.SelectedPlayer, maxLength: null, minLength: null});
        this.selectedTeamId_ = new prestans.types.Integer({required: true, default: null, maximum: null, minimum: null, choices: null});
    }
};
goog.inherits(pdemo.data.model.SelectedTeam, prestans.types.Model);



pdemo.data.model.SelectedTeam.prototype.players_ = null;
pdemo.data.model.SelectedTeam.prototype.selectedTeamId_ = null;


pdemo.data.model.SelectedTeam.prototype.getPlayers = function() {
    return this.players_;
};

pdemo.data.model.SelectedTeam.prototype.setPlayers = function(value) {
    var previousArray_ = this.players_;
    if(value instanceof prestans.types.Array && value.getElementTemplate() == pdemo.data.model.SelectedPlayer) {
        this.players_ = value;
        this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "players", previousArray_, this.players_));
        return true;
    }
    else
        return false;
};



pdemo.data.model.SelectedTeam.prototype.getSelectedTeamId = function() {
    return this.selectedTeamId_.getValue();
};

pdemo.data.model.SelectedTeam.prototype.setSelectedTeamId = function(value) {
    var previousValue_ = this.selectedTeamId_.getValue();
    var success_ = this.selectedTeamId_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "selectedTeamId", previousValue_, this.selectedTeamId_.getValue()));
    return success_;
};



pdemo.data.model.SelectedTeam.prototype.setValueForKey = function(key, value) {

    var returnVal_ = null;

    switch(key)
    {
        case "players":
            returnVal_ = this.setPlayers(value);
            break;
        case "selectedTeamId":
            returnVal_ = this.setSelectedTeamId(value);
            break;
        default:
            throw "Key: "+key+" not found in model";
    }

    return returnVal_;

};



pdemo.data.model.SelectedTeam.prototype.getJSONObject = function(opt_filter) {

    var jsonifiedObject_ = {};
    
    if(goog.isDef(opt_filter) && opt_filter.getPlayers().anyFieldsEnabled())
        jsonifiedObject_["players"] = this.getPlayers().getJSONObject(opt_filter.getPlayers());
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["players"] = this.getPlayers().getJSONObject();
    if(goog.isDef(opt_filter) && opt_filter.getSelectedTeamId())
        jsonifiedObject_["selected_team_id"] = this.getSelectedTeamId()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["selected_team_id"] = this.getSelectedTeamId()

    return jsonifiedObject_;
};

pdemo.data.model.SelectedTeam.prototype.getJSONString = function(opt_filter) {
    return goog.json.serialize(this.getJSONObject(opt_filter));
};