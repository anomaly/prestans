/*
 * Automatically generated by preplate
 */
goog.provide('pdemo.data.model.Team');

goog.require('goog.json');

goog.require('prestans.types.Model.EventType');
goog.require('prestans.types.Model.AttributeChangedEvent');

goog.require('prestans.types.Model');

goog.require('prestans.types.String');

/**
 * @constructor
 * @extends {prestans.types.Model}
*/
pdemo.data.model.Team = function(opt_json) {

    //Setup base model
    prestans.types.Model.call(this);

    if(goog.isDefAndNotNull(opt_json)) {
        this.teamId_ = new prestans.types.String({value: opt_json["team_id"], required: true, default: null, maxLength: null, minLength: null, format: null, choices: null});
        this.nation_ = new prestans.types.String({value: opt_json["nation"], required: true, default: null, maxLength: null, minLength: null, format: null, choices: null});
    }
    else {
        this.teamId_ = new prestans.types.String({required: true, default: null, max_length: null, min_length: null, format: null, choices: null});
        this.nation_ = new prestans.types.String({required: true, default: null, max_length: null, min_length: null, format: null, choices: null});
    }
};
goog.inherits(pdemo.data.model.Team, prestans.types.Model);



pdemo.data.model.Team.prototype.teamId_ = null;
pdemo.data.model.Team.prototype.nation_ = null;


pdemo.data.model.Team.prototype.getTeamId = function() {
    return this.teamId_.getValue();
};

pdemo.data.model.Team.prototype.setTeamId = function(value) {
    var previousValue_ = this.teamId_.getValue();
    var success_ = this.teamId_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "teamId", previousValue_, this.teamId_.getValue()));
    return success_;
};



pdemo.data.model.Team.prototype.getNation = function() {
    return this.nation_.getValue();
};

pdemo.data.model.Team.prototype.setNation = function(value) {
    var previousValue_ = this.nation_.getValue();
    var success_ = this.nation_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "nation", previousValue_, this.nation_.getValue()));
    return success_;
};



pdemo.data.model.Team.prototype.setValueForKey = function(key, value) {

    var returnVal_ = null;

    switch(key)
    {
        case "teamId":
            returnVal_ = this.setTeamId(value);
            break;
        case "nation":
            returnVal_ = this.setNation(value);
            break;
        default:
            throw "Key: "+key+" not found in model";
    }

    return returnVal_;

};



pdemo.data.model.Team.prototype.getJSONObject = function(opt_filter) {

    var jsonifiedObject_ = {};
    
    if(goog.isDef(opt_filter) && opt_filter.getTeamId())
        jsonifiedObject_["team_id"] = this.getTeamId()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["team_id"] = this.getTeamId()
    if(goog.isDef(opt_filter) && opt_filter.getNation())
        jsonifiedObject_["nation"] = this.getNation()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["nation"] = this.getNation()

    return jsonifiedObject_;
};

pdemo.data.model.Team.prototype.getJSONString = function(opt_filter) {
    return goog.json.serialize(this.getJSONObject(opt_filter));
};