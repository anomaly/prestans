/*
 * Automatically generated by preplate
 */
goog.provide('pdemo.data.model.SelectedPlayer');

goog.require('goog.json');

goog.require('prestans.types.Model.EventType');
goog.require('prestans.types.Model.AttributeChangedEvent');

goog.require('prestans.types.Model');

goog.require('prestans.types.Integer');
goog.require('prestans.types.Boolean');
goog.require('prestans.types.String');

/**
 * @constructor
 * @extends {prestans.types.Model}
*/
pdemo.data.model.SelectedPlayer = function(opt_json) {

    //Setup base model
    prestans.types.Model.call(this);

    if(goog.isDefAndNotNull(opt_json)) {
        this.selectedPlayerId_ = new prestans.types.Integer({value: opt_json["selected_player_id"], required: true, default: null, maximum: null, minimum: null, choices: null});
        this.viceCaptain_ = new prestans.types.Boolean({value: opt_json["vice_captain"], required: true, default: false});
        this.captain_ = new prestans.types.Boolean({value: opt_json["captain"], required: true, default: false});
        this.role_ = new prestans.types.String({value: opt_json["role"], required: true, default: "Batsmen", maxLength: null, minLength: null, format: null, choices: ['Batsmen', 'Keeper', 'All-Rounder', 'Bowler']});
        this.battingPosition_ = new prestans.types.Integer({value: opt_json["batting_position"], required: true, default: null, maximum: 11, minimum: 1, choices: null});
    }
    else {
        this.selectedPlayerId_ = new prestans.types.Integer({required: true, default: null, maximum: null, minimum: null, choices: null});
        this.viceCaptain_ = new prestans.types.Boolean({required: true, default: false});
        this.captain_ = new prestans.types.Boolean({required: true, default: false});
        this.role_ = new prestans.types.String({required: true, default: "Batsmen", max_length: null, min_length: null, format: null, choices: ['Batsmen', 'Keeper', 'All-Rounder', 'Bowler']});
        this.battingPosition_ = new prestans.types.Integer({required: true, default: null, maximum: 11, minimum: 1, choices: null});
    }
};
goog.inherits(pdemo.data.model.SelectedPlayer, prestans.types.Model);



pdemo.data.model.SelectedPlayer.prototype.selectedPlayerId_ = null;
pdemo.data.model.SelectedPlayer.prototype.viceCaptain_ = null;
pdemo.data.model.SelectedPlayer.prototype.captain_ = null;
pdemo.data.model.SelectedPlayer.prototype.role_ = null;
pdemo.data.model.SelectedPlayer.RoleChoices = ['Batsmen', 'Keeper', 'All-Rounder', 'Bowler'];
pdemo.data.model.SelectedPlayer.prototype.battingPosition_ = null;


pdemo.data.model.SelectedPlayer.prototype.getSelectedPlayerId = function() {
    return this.selectedPlayerId_.getValue();
};

pdemo.data.model.SelectedPlayer.prototype.setSelectedPlayerId = function(value) {
    var previousValue_ = this.selectedPlayerId_.getValue();
    var success_ = this.selectedPlayerId_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "selectedPlayerId", previousValue_, this.selectedPlayerId_.getValue()));
    return success_;
};



pdemo.data.model.SelectedPlayer.prototype.getViceCaptain = function() {
    return this.viceCaptain_.getValue();
};

pdemo.data.model.SelectedPlayer.prototype.setViceCaptain = function(value) {
    var previousValue_ = this.viceCaptain_.getValue();
    var success_ = this.viceCaptain_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "viceCaptain", previousValue_, this.viceCaptain_.getValue()));
    return success_;
};



pdemo.data.model.SelectedPlayer.prototype.getCaptain = function() {
    return this.captain_.getValue();
};

pdemo.data.model.SelectedPlayer.prototype.setCaptain = function(value) {
    var previousValue_ = this.captain_.getValue();
    var success_ = this.captain_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "captain", previousValue_, this.captain_.getValue()));
    return success_;
};



pdemo.data.model.SelectedPlayer.prototype.getRole = function() {
    return this.role_.getValue();
};

pdemo.data.model.SelectedPlayer.prototype.setRole = function(value) {
    var previousValue_ = this.role_.getValue();
    var success_ = this.role_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "role", previousValue_, this.role_.getValue()));
    return success_;
};



pdemo.data.model.SelectedPlayer.prototype.getBattingPosition = function() {
    return this.battingPosition_.getValue();
};

pdemo.data.model.SelectedPlayer.prototype.setBattingPosition = function(value) {
    var previousValue_ = this.battingPosition_.getValue();
    var success_ = this.battingPosition_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "battingPosition", previousValue_, this.battingPosition_.getValue()));
    return success_;
};



pdemo.data.model.SelectedPlayer.prototype.setValueForKey = function(key, value) {

    var returnVal_ = null;

    switch(key)
    {
        case "selectedPlayerId":
            returnVal_ = this.setSelectedPlayerId(value);
            break;
        case "viceCaptain":
            returnVal_ = this.setViceCaptain(value);
            break;
        case "captain":
            returnVal_ = this.setCaptain(value);
            break;
        case "role":
            returnVal_ = this.setRole(value);
            break;
        case "battingPosition":
            returnVal_ = this.setBattingPosition(value);
            break;
        default:
            throw "Key: "+key+" not found in model";
    }

    return returnVal_;

};



pdemo.data.model.SelectedPlayer.prototype.getJSONObject = function(opt_filter) {

    var jsonifiedObject_ = {};
    
    if(goog.isDef(opt_filter) && opt_filter.getSelectedPlayerId())
        jsonifiedObject_["selected_player_id"] = this.getSelectedPlayerId()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["selected_player_id"] = this.getSelectedPlayerId()
    if(goog.isDef(opt_filter) && opt_filter.getViceCaptain())
        jsonifiedObject_["vice_captain"] = this.getViceCaptain()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["vice_captain"] = this.getViceCaptain()
    if(goog.isDef(opt_filter) && opt_filter.getCaptain())
        jsonifiedObject_["captain"] = this.getCaptain()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["captain"] = this.getCaptain()
    if(goog.isDef(opt_filter) && opt_filter.getRole())
        jsonifiedObject_["role"] = this.getRole()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["role"] = this.getRole()
    if(goog.isDef(opt_filter) && opt_filter.getBattingPosition())
        jsonifiedObject_["batting_position"] = this.getBattingPosition()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["batting_position"] = this.getBattingPosition()

    return jsonifiedObject_;
};

pdemo.data.model.SelectedPlayer.prototype.getJSONString = function(opt_filter) {
    return goog.json.serialize(this.getJSONObject(opt_filter));
};