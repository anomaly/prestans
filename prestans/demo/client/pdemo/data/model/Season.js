/*
 * Automatically generated by preplate
 */
goog.provide('pdemo.data.model.Season');

goog.require('goog.json');

goog.require('prestans.types.Model.EventType');
goog.require('prestans.types.Model.AttributeChangedEvent');

goog.require('prestans.types.Model');

goog.require('prestans.types.Integer');

/**
 * @constructor
 * @extends {prestans.types.Model}
*/
pdemo.data.model.Season = function(opt_json) {

    //Setup base model
    prestans.types.Model.call(this);

    if(goog.isDefAndNotNull(opt_json)) {
        this.seasonId_ = new prestans.types.Integer({value: opt_json["season_id"], required: true, default: null, maximum: null, minimum: null, choices: null});
    }
    else {
        this.seasonId_ = new prestans.types.Integer({required: true, default: null, maximum: null, minimum: null, choices: null});
    }
};
goog.inherits(pdemo.data.model.Season, prestans.types.Model);



pdemo.data.model.Season.prototype.seasonId_ = null;


pdemo.data.model.Season.prototype.getSeasonId = function() {
    return this.seasonId_.getValue();
};

pdemo.data.model.Season.prototype.setSeasonId = function(value) {
    var previousValue_ = this.seasonId_.getValue();
    var success_ = this.seasonId_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "seasonId", previousValue_, this.seasonId_.getValue()));
    return success_;
};



pdemo.data.model.Season.prototype.setValueForKey = function(key, value) {

    var returnVal_ = null;

    switch(key)
    {
        case "seasonId":
            returnVal_ = this.setSeasonId(value);
            break;
        default:
            throw "Key: "+key+" not found in model";
    }

    return returnVal_;

};



pdemo.data.model.Season.prototype.getJSONObject = function(opt_filter) {

    var jsonifiedObject_ = {};
    
    if(goog.isDef(opt_filter) && opt_filter.getSeasonId())
        jsonifiedObject_["season_id"] = this.getSeasonId()
    else if(!goog.isDef(opt_filter))
        jsonifiedObject_["season_id"] = this.getSeasonId()

    return jsonifiedObject_;
};

pdemo.data.model.Season.prototype.getJSONString = function(opt_filter) {
    return goog.json.serialize(this.getJSONObject(opt_filter));
};