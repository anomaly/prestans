/*
 * Automatically generated by preplate
 */
goog.provide('pdemo.data.model.ModelSample');

goog.require('goog.json');

goog.require('prestans.types.Model.EventType');
goog.require('prestans.types.Model.AttributeChangedEvent');

goog.require('prestans.types.Model');

goog.require('prestans.types.String');
goog.require('pdemo.data.model.IntegerSample');
goog.require('pdemo.data.model.StringSample');

/**
 * @constructor
 * @extends {prestans.types.Model}
*/
pdemo.data.model.ModelSample = function(opt_json) {

    //Setup base model
    prestans.types.Model.call(this);

    if(goog.isDefAndNotNull(opt_json)) {
        this.stringTitle_ = new prestans.types.String({value: opt_json["string_title"], required: true, default: null, maxLength: null, minLength: null, format: , choices: []});
        this.integerSample_ = new pdemo.data.model.IntegerSample(opt_json["integer_sample"]);
        this.stringSample_ = new pdemo.data.model.StringSample(opt_json["string_sample"]);
    }
    else {
        this.stringTitle_ = new prestans.types.String({required: true, default: null, max_length: null, min_length: null, format: , choices: []});
        this.integerSample_ = new ${namespace}.${model}();
        this.stringSample_ = new ${namespace}.${model}();
    }
};
goog.inherits(pdemo.data.model.ModelSample, prestans.types.Model);



pdemo.data.model.ModelSample.prototype.stringTitle_ = null;
pdemo.data.model.ModelSample.prototype.integerSample_ = null;
pdemo.data.model.ModelSample.prototype.stringSample_ = null;


pdemo.data.model.ModelSample.prototype.getStringTitle = function() {
    return this.stringTitle_.getValue();
};

pdemo.data.model.ModelSample.prototype.setStringTitle = function(value) {
    var previousValue_ = this.stringTitle_.getValue();
    var success_ = this.stringTitle_.setValue(value);
    this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "stringTitle", previousValue_, this.stringTitle_.getValue()));
    return success_;
};



pdemo.data.model.ModelSample.prototype.getIntegerSample = function() {
    return this.integerSample_;
};

pdemo.data.model.ModelSample.prototype.setIntegerSample = function(value) {
    var previousModel_ = this.integerSample_;
    if(value instanceof pdemo.data.model.IntegerSample) {
        this.integerSample_ = value;
        this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "integerSample", previousModel_, this.integerSample_));
        return true;
    }
    else
        return false;
};



pdemo.data.model.ModelSample.prototype.getStringSample = function() {
    return this.stringSample_;
};

pdemo.data.model.ModelSample.prototype.setStringSample = function(value) {
    var previousModel_ = this.stringSample_;
    if(value instanceof pdemo.data.model.StringSample) {
        this.stringSample_ = value;
        this.dispatchEvent(new prestans.types.Model.AttributeChangedEvent(prestans.types.Model.EventType.ATTRIBUTE_CHANGED, "stringSample", previousModel_, this.stringSample_));
        return true;
    }
    else
        return false;
};



pdemo.data.model.ModelSample.prototype.setValueForKey = function(key, value) {

    var returnVal_ = null;

    switch(key)
    {
        case "stringTitle":
            returnVal_ = this.setStringTitle(value);
            break;
        case "integerSample":
            returnVal_ = this.setIntegerSample(value);
            break;
        case "stringSample":
            returnVal_ = this.setStringSample(value);
            break;
        default:
            throw "Key: "+key+" not found in model";
    }

    return returnVal_;

};